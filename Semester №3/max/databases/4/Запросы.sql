-- 1. Добавление нового CD-диска

DECLARE @Исполнитель nvarchar(30) = '50 Cent',
		@Название nvarchar(30) = 'PIMP',
		@Дата_выпуска date = '19.10.1999',
		@Издатель nvarchar(39) = 'Death Records',
		@Общая_длительность int = 34,
		@Жанр nvarchar(20) = 'Rap',
		@Альбом nvarchar(11) = 'Candy Cake',
		@Дата_записи date = '19.09.1999',
		@Цифровая_копия binary(2048) = NULL,
		@Дата_поступления_в_библиотеку date = '10.12.2012',
		@Тираж int = 10000

INSERT CD_диск(Исполнитель, Название, Дата_выпуска, Издатель, Общая_длительность, Жанр, Альбом, Дата_записи, Цифровая_копия, Дата_поступления_в_библиотеку, Тираж)
VALUES (@Исполнитель, @Название, @Дата_выпуска, @Издатель, @Общая_длительность, @Жанр, @Альбом, @Дата_записи, @Цифровая_копия, @Дата_поступления_в_библиотеку, @Тираж)

-- 2. Добавление новой грампластинки

DECLARE @Исполнитель nvarchar(30) = 'Элвис Пресли',
		@Название nvarchar(30) = 'The "Good Day" Song',
		@Дата_выпуска date = '10.11.1965',
		@Дата_записи date = '10.11.1933',
		@Дата_поступления_в_библиотеку date = '10.11.2000',
		@Альбом nvarchar(30) = 'Bad Day',
		@Название_музыкального_произведения nvarchar(30) = 'A Good Day',
		@Тип nvarchar(20) = 'жесткая',
		@Издатель nvarchar(20) = 'NY Records',
		@Длительность int = 13,
		@Типоразмер nvarchar(20) = 'гигант',
		@Формат_записи nvarchar(20) = 'монофоническая',
		@Жанр nvarchar(20) = 'Pop',
		@Цифровая_копия binary(2048) = NULL,
		@Тираж int = 1241

INSERT Грампластинка(
	Исполнитель, Название,
	Дата_выпуска, Дата_записи, Дата_поступления_в_библиотеку,
	Альбом, Название_музыкального_произведения,
	Тип, Издатель, Длительность, Типоразмер,
	Формат_записи, Жанр, Цифровая_копия, Тираж)
VALUES(
	@Исполнитель, @Название,
	@Дата_выпуска, @Дата_записи, @Дата_поступления_в_библиотеку,
	@Альбом, @Название_музыкального_произведения,
	@Тип, @Издатель, @Длительность, @Типоразмер,
	@Формат_записи, @Жанр, @Цифровая_копия, @Тираж)

-- 3. Добавление нового нотного издания

DECLARE @Заглавие nvarchar(30) = 'Симфонии Шопена',
		@Издательство nvarchar(30) = 'Нота',
		@Дата_издания date = '10.09.1995',
		@Тираж int = 2445,
		@Авторы_составители nvarchar(128) = 'Елкин О. Е.',
		@Жанр nvarchar(30) = 'Классика',
		@Место_выпуска nvarchar(20) = 'Москва',
		@Сведения_о_средствах_исполнения nvarchar(20) = 'для фортепиано',
		@Количество_актов int = 3,
		@На_руках bit = 1
INSERT Нотное_издание(
	Заглавие, Издательство, Дата_издания,
	Тираж, Авторы_составители,
	Жанр, Место_выпуска,
	Сведения_о_средствах_исполнения,
	Количество_актов, На_руках)
VALUES(
	@Заглавие, @Издательство, @Дата_издания,
	@Тираж, @Авторы_составители,
	@Жанр, @Место_выпуска,
	@Сведения_о_средствах_исполнения,
	@Количество_актов, @На_руках)

-- 4. Добавление нового сотрудника

DECLARE @Фамилия nvarchar(20) = 'Аверин',
		@Имя nvarchar(20) = 'Владислав',
		@Отчество nvarchar(20) = 'Евгеньевич',
		@Дата_рождения date = '02.10.2000',
		@Адрес_проживания nvarchar(49) = 'ул. Клочкова, 68',
		@Номер_телефона char(11) = '89372225473',
		@Адрес_электронной_почты char(20) = 'vlad@ya.ru',
		@Пол char(3) = 'муж',
		@Должность nvarchar(20) = 'уборщик',
		@Дата_трудоустройства date = '02.10.2019'
INSERT Сотрудник(
	Фамилия, Имя, Отчество,
	Дата_рождения, Адрес_проживания,
	Номер_телефона, Адрес_электронной_почты,
	Пол, Должность, Дата_трудоустройства
)
VALUES(
	@Фамилия, @Имя, @Отчество,
	@Дата_рождения, @Адрес_проживания,
	@Номер_телефона, @Адрес_электронной_почты,
	@Пол, @Должность, @Дата_трудоустройства
)

-- 5. Добавление нового посетителя

DECLARE @Фамилия nvarchar(20) = 'Аверин',
		@Имя nvarchar(20) = 'Владислав',
		@Отчество nvarchar(20) = 'Евгеньевич',
		@Дата_рождения date = '02.10.2000',
		@Адрес_проживания nvarchar(49) = 'ул. Клочкова, 68',
		@Номер_телефона char(11) = '89372225473',
		@Адрес_электронной_почты char(20) = 'vlad@ya.ru',
		@Пол char(3) = 'муж'
INSERT Посетитель(
	Фамилия, Имя, Отчество,
	Дата_рождения, Адрес_проживания,
	Номер_телефона, Адрес_электронной_почты,
	Пол
)
VALUES(
	@Фамилия, @Имя, @Отчество,
	@Дата_рождения, @Адрес_проживания,
	@Номер_телефона, @Адрес_электронной_почты,
	@Пол
)

-- 6. Вывести все CD-диски альбома "Candy Cake" исполнителя "50 Cent"

SELECT *
FROM CD_диск
WHERE Альбом = 'Candy Cake' AND Исполнитель = '50 Cent'

-- 7. Вывести все CD-диски тиражем свыше 1000 экземпляров

SELECT *
FROM CD_диск
WHERE Тираж > 1000
ORDER BY Тираж

-- 8. Вывести все нотные издания, которые еще не были возвращены

SELECT Заглавие, Дата_выдачи
FROM dbo.Выдача_нотного_издания
JOIN dbo.Нотное_издание
ON dbo.Выдача_нотного_издания.Нотное_издание = dbo.Нотное_издание.ID
GROUP BY Заглавие, Дата_выдачи
ORDER BY Дата_выдачи

-- 9. Вывести все грампластинки с монофоническим форматом записи

SELECT *
FROM Грампластинка
WHERE Формат_записи = 'монофоническая'

-- 10. Вывести имена посетителей, которые прослушивали CD-диски в декабре 2019 года

SELECT CONCAT(Фамилия, ' ', Имя, ' ', Отчество) AS [Полное имя]
FROM Акт_прослушивания_CD_диска
JOIN Посетитель
ON dbo.Акт_прослушивания_CD_диска.Посетитель = Посетитель.ID
WHERE DATEPART(YY, Дата_прослушивания) = 2019 AND DATEPART(MM, Дата_прослушивания) = 12

-- 11. Вывести самый длинный акт прослушивания каждой грампластинки

SELECT Название, MAX(Длительность_сеанса)
FROM Грампластинка
JOIN Акт_прослушивания_грампластинки
ON Грампластинка.ID = Акт_прослушивания_грампластинки.Грампластинка
GROUP BY Название

-- 12. Вывести всех охранников библиотеки

SELECT *
FROM Сотрудник
WHERE Должность = 'охранник'

-- 13. Вывести все нотные издания, которые были возвращены поздно

SELECT Заглавие
FROM Нотное_издание
JOIN Выдача_нотного_издания
ON dbo.Нотное_издание.ID = dbo.Выдача_нотного_издания.Нотное_издание
WHERE Дата_реального_возврата > Дата_предполагаемого_возврата

-- 14. Вывести все акты прослушивания CD-дисков, которые были зарегистрированы определенным сотрудником

DECLARE @id_сотрудника int = 1
SELECT *
FROM Акт_прослушивания_CD_диска
WHERE Сотрудник = @id_сотрудника

-- 15. Вывести среднюю длительность CD-диска

SELECT AVG(Общая_длительность) AS [Средняя длительность CD-диска]
FROM dbo.CD_диск

-- 16. Вывести все CD-диски, которые поступили в текущем году

SELECT *
FROM CD_диск
WHERE DATEPART(YY, Дата_поступления_в_библиотеку) = DATEPART(YY, GETDATE())

-- 17. Вывести все грампластинки типоразмера «гигант»

SELECT *
FROM Грампластинка
WHERE Типоразмер = 'гигант'

-- 18. Вывести всех посетителей и количество прослушанных ими грампластинок

SELECT CONCAT(Фамилия, ' ', Имя, ' ', Отчество) AS [Полное имя], COUNT(Посетитель) AS [Количество прослушанных грампластинок]
FROM Посетитель
JOIN Акт_прослушивания_грампластинки
ON Посетитель.ID = Акт_прослушивания_грампластинки.Посетитель
GROUP BY CONCAT(Фамилия, ' ', Имя, ' ', Отчество)
ORDER BY [Количество прослушанных грампластинок]

-- 19. Вывести всех посетителей и количество прослушанных ими CD-дисков

SELECT CONCAT(Фамилия, ' ', Имя, ' ', Отчество) AS [Полное имя], COUNT(Посетитель) AS [Количество прослушанных CD-дисков]
FROM Посетитель
JOIN Акт_прослушивания_CD_диска
ON Посетитель.ID = Акт_прослушивания_CD_диска.Посетитель
GROUP BY CONCAT(Фамилия, ' ', Имя, ' ', Отчество)
ORDER BY [Количество прослушанных CD-дисков]

-- 20. Вывести все нотные издания, тиражом свыше 200 экземпляров

SELECT *
FROM Нотное_издание
WHERE Тираж > 200

-- 21. Вывести все нотные издания, которые сейчас находятся на руках

SELECT *
FROM Нотное_издание
WHERE На_руках = 1

-- 22. Вывести краткую информацию о посетителях, которые задерживают нотные издания

SELECT CONCAT(Фамилия, ' ', Имя, ' ', Отчество) AS [Полное имя], Номер_телефона
FROM dbo.Посетитель
JOIN dbo.Выдача_нотного_издания
ON dbo.Посетитель.ID = dbo.Выдача_нотного_издания.Посетитель
WHERE dbo.Выдача_нотного_издания.Дата_реального_возврата IS NULL

-- 23. Вывести среднюю длительность грампластинки

SELECT AVG(Длительность)
FROM Грампластинка

--/----------------------------------------------------------------------------
-- 1. Добавить сотрудника.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Добавить_сотрудника
	@Фамилия nvarchar(20),
	@Имя nvarchar(20),
	@Отчество nvarchar(20),
	@Номер_мобильного_телефона char(11),
	@Пол nchar(3),
	@Дата_рождения date,
	@Адрес_электронной_почты nvarchar(50),
	@Паспортные_данные char(11),
	@Заработная_плата money,
	@Статус nvarchar(20)
AS
INSERT INTO Сотрудник (
	Фамилия, Имя, Отчество,
	Номер_мобильного_телефона,
	Пол,
	Дата_рождения,
	Адрес_электронной_почты,
	Паспортные_данные,
	Заработная_плата,
	Статус
)
VALUES (
	@Фамилия, @Имя, @Отчество,
	@Номер_мобильного_телефона,
	@Пол,
	@Дата_рождения,
	@Адрес_электронной_почты,
	@Паспортные_данные,
	@Заработная_плата,
	@Статус
)

EXEC Добавить_сотрудника 'Иванов', 'Иван', 'Иванович', '89271123732', 'муж', '2000-10-03', 'example@example.com', '1234 123456', 15000, 'работает'

--/----------------------------------------------------------------------------
-- 2. Добавить клиента.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Добавить_клиента
	@Фамилия nvarchar(20),
	@Имя nvarchar(20),
	@Отчество nvarchar(20),
	@Номер_мобильного_телефона char(11),
	@Пол nchar(3),
	@Дата_рождения date,
	@Адрес_электронной_почты nvarchar(50),
	@Паспортные_данные char(11)
AS
INSERT INTO Клиент (
	Фамилия, Имя, Отчество,
	Номер_мобильного_телефона,
	Пол, Дата_рождения,
	Адрес_электронной_почты,
	Паспортные_данные
)
VALUES (
	@Фамилия, @Имя, @Отчество,
	@Номер_мобильного_телефона,
	@Пол, @Дата_рождения,
	@Адрес_электронной_почты,
	@Паспортные_данные
)

EXEC Добавить_клиента 'Иванов', 'Иван', 'Иванович', '89372221234', 'муж', '2000-10-03', 'example@ya.ru', '1234 123456'

--/----------------------------------------------------------------------------
-- 3. Изменить статус сотрудника.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Изменить_статус_сотрудника
	@ID int,
	@Статус nvarchar(20)
AS
UPDATE dbo.Сотрудник
SET Статус = @Статус
WHERE ID = @ID

--/----------------------------------------------------------------------------
-- 4. Сделать помещение недоступным для покупки.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Сделать_недоступным_для_покупки
	@ID int,
	@Что varchar(20)
AS
BEGIN
	IF(@Что = 'помещение')
	BEGIN
		UPDATE dbo.Помещение
		SET Доступно_для_покупки = 0
		WHERE ID = @ID
	END
	ELSE IF(@Что = 'земельный участок')
	BEGIN
		UPDATE dbo.Земельный_участок
		SET Доступно_для_покупки = 0
		WHERE ID = @ID
	END
END

EXEC Сделать_недоступным_для_покупки 0, 'помещение'

--/----------------------------------------------------------------------------
-- 5. Изменить фамилию сотрудника.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Изменить_фамилию_сотрудника
	@ID int,
	@Фамилия nvarchar(20)
AS
UPDATE dbo.Сотрудник
SET Фамилия = @Фамилия
WHERE ID = @ID

EXEC Изменить_фамилию_сотрудника 1, 'Гончаров'

--/----------------------------------------------------------------------------
-- 6. Получить среднюю кадастровую стоимость всех земельных участков.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Получить_среднюю_кадастровую_стоимость_земельного_участка
AS
DECLARE @Средняя_стоимость money
SELECT @Средняя_стоимость = AVG(Кадастровая_стоимость)
FROM dbo.Земельный_участок
RETURN @Средняя_стоимость;

--/----------------------------------------------------------------------------
-- 7. Изменить кадастровую стоимость земельного участка.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Изменить_кадастровую_стоимость_земельного_участка
	@ID int,
	@Новая_стоимость money
AS
UPDATE dbo.Земельный_участок
SET Кадастровая_стоимость = @Новая_стоимость
WHERE ID = @ID

DECLARE @средняя_стоимость_земельного_участка money
EXEC @средняя_стоимость_земельного_участка = Получить_среднюю_кадастровую_стоимость_земельного_участка

EXEC Изменить_кадастровую_стоимость_земельного_участка 0, @средняя_стоимость_земельного_участка

--/----------------------------------------------------------------------------
-- 8. Вывести помещения в определенном ценовом интервале.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Вывести_помещения_в_ценовом_интервале
	@Минимум money,
	@Максимум money
AS
SELECT ID, Адрес, Стоимость
FROM dbo.Помещение
WHERE Стоимость >= @Минимум AND Стоимость <= @Максимум
ORDER BY Стоимость ASC

EXEC Вывести_помещения_в_ценовом_интервале 253200, 3201400

--/----------------------------------------------------------------------------
-- 8. Вывести имя сотрудника, оформившего договор купли продажи помещения.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Вывести_имя_сотрудника_оформившего_договор_купли_продажи_помещения
	@ID int
AS
SELECT CONCAT(Фамилия, ' ', Имя, ' ', Отчество) AS Имя
FROM dbo.Сотрудник
JOIN dbo.Купля_продажа_помещения
ON dbo.Сотрудник.ID = dbo.Купля_продажа_помещения.Сотрудник
WHERE dbo.Сотрудник.ID = @ID

EXEC Вывести_имя_сотрудника_оформившего_договор_купли_продажи_помещения 1

--/----------------------------------------------------------------------------
-- 9. Вывести количество оформленых договоров купли-продажи помещений
--    определенного сотрудника.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Вывести_количество_оформленных_договоров_купли_продажи_помещений_сотрудника
	@ID int
AS
SELECT CONCAT(Фамилия, ' ', Имя, ' ', Отчество) AS Имя, COUNT(Сотрудник) AS [Количество договоров]
FROM Сотрудник
JOIN Купля_продажа_помещения ON Сотрудник.ID = Купля_продажа_помещения.Сотрудник
WHERE Сотрудник.ID = @ID
GROUP BY CONCAT(Фамилия, ' ', Имя, ' ', Отчество)

EXEC Вывести_количество_оформленных_договоров_купли_продажи_помещений_сотрудника 3

--/----------------------------------------------------------------------------
-- 10. Получить среднюю зарплату сотрудника.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Получить_среднюю_зарплату_сотрудника
AS
DECLARE @Средняя_зарплата money
SELECT @Средняя_зарплата = AVG(Заработная_плата)
FROM dbo.Сотрудник
RETURN @Средняя_зарплата;

--/----------------------------------------------------------------------------
-- 11. Изменить зарплату сотрудника.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Изменить_зарплату_сотрудника
	@ID int,
	@Новая_заработная_плата money
AS
UPDATE dbo.Сотрудник
SET Заработная_плата = @Новая_заработная_плата
WHERE ID = @ID

DECLARE @Средняя_зарплата money
EXEC @Средняя_зарплата = Получить_среднюю_зарплату_сотрудника

EXEC Изменить_зарплату_сотрудника 0, @Средняя_зарплата

--/----------------------------------------------------------------------------
-- 12. Посчитать выручку, которую агенство получило от сделок по купле-продаже
--     помещений за определенный период.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Посчитать_выручку_за_куплю_продажу_помещений
	@Начальная_дата date,
	@Конечная_дата date
AS
SELECT SUM(Выручка) AS [Выручка]
FROM dbo.Купля_продажа_помещения
WHERE Дата_заключения_договора > @Начальная_дата AND Дата_заключения_договора < @Конечная_дата

EXEC Посчитать_выручку_за_куплю_продажу_помещений '2000-10-02', '2009-10-02'

--/----------------------------------------------------------------------------
-- 13. Вывести количество земельных участков, которыми владеет клиент.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Получить_количество_земельных_участков_клиента
	@ID int
AS
SELECT SUM(Владелец) AS [Количество земельных участков]
FROM dbo.Клиент
JOIN dbo.Земельный_участок ON dbo.Клиент.ID = dbo.Земельный_участок.Владелец
WHERE dbo.Клиент.ID = @ID

--/----------------------------------------------------------------------------
-- 14. Вывести количество помещений, которыми владеет клиент.
--/----------------------------------------------------------------------------

CREATE PROCEDURE Получить_количество_помещений_клиента
	@ID int
AS
SELECT SUM(Владелец) AS [Количество помещений]
FROM dbo.Клиент
JOIN dbo.Помещение ON dbo.Клиент.ID = dbo.Помещение.Владелец
WHERE dbo.Клиент.ID = @ID